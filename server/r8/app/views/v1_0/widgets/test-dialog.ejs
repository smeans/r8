<%
    const pageTitle = product.name + ' Product ‐ Effective ' + pkg.effectiveDate;
    const detailTerm = focusTerm && focusTerm.name != '_rating' && focusTerm;
%>

<div id="testDialog" class="hidden fixed z-10 inset-0 overflow-y-auto" aria-labelledby="modal-title" role="dialog" aria-modal="true">
  <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
    <!--
      Background overlay, show/hide based on modal state.

      Entering: "ease-out duration-300"
        From: "opacity-0"
        To: "opacity-100"
      Leaving: "ease-in duration-200"
        From: "opacity-100"
        To: "opacity-0"
    -->
    <div class="cancelBackground fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"
        data-action="closeTestDialog"></div>

    <!-- This element is to trick the browser into centering the modal contents. -->
    <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>

    <!--
      Modal panel, show/hide based on modal state.

      Entering: "ease-out duration-300"
        From: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
        To: "opacity-100 translate-y-0 sm:scale-100"
      Leaving: "ease-in duration-200"
        From: "opacity-100 translate-y-0 sm:scale-100"
        To: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
    -->
    <div class="inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full sm:p-6">
      <div>
        <div class="mt-3 sm:mt-5">
          <div class="w-full text-left">
            <h3 class="text-lg leading-6 font-medium text-gray-900" id="modal-title">
              <%= pageTitle %>
            </h3>
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium <%= req.organization.currentEnvironment %>-bg text-blue-800"> <%= req.organization.currentEnvironment %> </span>
          </div>          
<%
  function renderTestForm(testTerm, classes) {
    classes = classes || '';
%>
          <div class="mt-2 <%= classes %>" data-testterm="<%= testTerm.name %>">
            <x-persist-form key="<%= pkg.id %>">
                <form method="POST">
                    <p class="flex items-center">
                      <x-term-icon class="inline-block flex-shrink-0 w-8 h-8" type="<%- testTerm.termTypeName %>"></x-term-icon>
                      <label class="text-blue-400 whitespace-nowrap"><%= testTerm.name == '_rating' ? 'Total Premium' : testTerm.name %></label>
                      <input disabled name="<%= testTerm.name %>" class="inline-block text-right font-bold w-6/12 px-2"/>
                      <button type="button" data-action="refreshTestForm" class="inline-flex items-center p-1 border border-transparent rounded-full shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                          <x-svg class="h-4 w-4" src="/svg/refresh.svg"></x-svg>
                      </button>
                    </p>
                    <hr class="my-2 py-2"/>
    <%
    Array.from(pkg.getRequiredInputs(testTerm)).forEach((term) => {
        const url = new SPAURL(req.url);
        url.searchParams.append('ts', term.name);
%>
                    <div class="flex mt-1">
                      <x-term-icon class="inline-block flex-shrink-0 w-8 h-8" type="<%- term.termTypeName %>"></x-term-icon>
                      <label for="test<<%= term.Name %>" class="font-medium text-blue-400">
                        <div class="px-2 py-1 truncate">
                          <a href="<%- url %>" class="text-gray-900 font-medium hover:text-gray-600 term"
                                    title="<%= term.description || '(missing description)' %>"><%= term.name %></a>
                        </div>
                      <div>
<%
        const choices = term.getChoices();

        if (choices) {
%>
                        <select id="test<<%= term.Name %>" name="<%= term.name %>">
<%
            Array.from(choices).forEach((choice) => {
%>
                          <option<%= (term.value == choice ? ' selected': '')%>><%= choice %></option>
<%
            });
%>
                        </select>
<%
        } else {
%>
                        <input type="text" name="<%= term.name %>" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-lg p-1" value="<%= term.value || ''%>">
<%
        }
%>
                      </div>
                    </div>
<%  });
%>
                </form>
            </x-persist-form>
          </div>
<%
  }
%>      
      <div>
        <div class="sm:hidden">
          <label for="tabs" class="sr-only">Select a tab</label>
          <!-- Use an "onChange" listener to redirect the user to the selected tab URL. -->
          <select id="tabs" name="tabs" class="block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md">
            <option>Rating Algorithm</option>
<%
  if (detailTerm) {
%>
            <option><%= detailTerm.name %></option>
<%
  }
%>

          </select>
        </div>
        <div class="hidden sm:block">
          <div class="border-b border-gray-200">
            <nav id="testTabLinks" class="-mb-px flex space-x-8" aria-label="Tabs" data-action="handleTabs" data-tabstarget="#testForms">
              <a class="border-indigo-500 text-indigo-600 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm"> Rating Algorithm </a>

<%
  if (detailTerm) {
%>
              <a class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm"> <%= detailTerm.name %> </a>
<%
  }
%>
            </nav>
            <div id="testForms">
<%
  renderTestForm(pkg.getTerm('_rating'));

  if (detailTerm) {
    renderTestForm(detailTerm, 'hidden');
  }
%>
            </div>
          </div>
        </div>
      </div>      
      <div class="mt-5 sm:mt-6">
        <button type="button" data-action="closeTestDialog" class="inline-flex justify-center w-full rounded-md border border-transparent shadow-sm px-4 py-2 bg-gray-600 text-base font-medium text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 sm:text-sm">
          close
        </button>
      </div>
    </div>
  </div>
</div>
