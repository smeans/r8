<%
    const gravatar = require('gravatar');
    const user = loginSession.user;
    const organization = user.organization;

    const urlParams = req.url.split('?')[0].split('/');
    const defaultEnv = organization.currentEnvironment;
    const developmentEnv = organization.environments[0];
    const currentTab = urlParams.length > 3 ? urlParams[3] : defaultEnv;
    const inDevelopmentEnv = organization.environments.indexOf(currentTab) == 0;
    const inProdEnv = organization.environments.indexOf(currentTab) == organization.environments.length-1;
    const higherEnv = !inProdEnv ? organization.environments[organization.environments.indexOf(currentTab)+1] : null;
    const noVersions = packageLists[developmentEnv].length == 0;
%>
<x-page data-csrf="<%- req.csrfToken() %>">
  <nav>
      <%- include('widgets/navbar', {title}) %>
  </nav>
  <div class="bg-flatblue">
    <div class="max-w-7xl mx-auto py-8 px-4 sm:py-8 sm:px-6 lg:px-8 lg:flex lg:justify-between">
      <div class="w-full">
        <h2 class="text-4xl font-extrabold text-white sm:text-5xl sm:tracking-tight lg:text-6xl"><%=product.name%></h2>
        <div class="flex mt-5">
            <div>
                <h2 class="text-gray-400">PRODUCT DESCRIPTION</h2>
                <p class="mt-1 text-xl text-white"><%=product.description%></p>
            </div>
            <div class="ml-16">
                <h2 class="text-gray-400">STATES</h2>
                <p class="mt-1 text-xl text-white"><%=product.states && product.states.join(', ')%></p>
            </div>
        </div>
      </div>
    </div>

    <div class="w-full flex justify-end">
        <div class="my-2 mx-6">
            <button type="button" data-action="toggleModal" data-target="#product-details" class="inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-extrabold rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">Edit Details</button>
        </div>
    </div>
  </div>

  <%  if (req.errors && req.errors.length) { %>
    <%- include('widgets/show-errors', {errors: req.errors}) %>
  <%  } %>  

  <div class="max-w-7xl mx-auto py-1 px-4 sm:py-2 sm:px-6 lg:px-8 lg:flex lg:justify-between">
    <div class="sm:hidden">
      <label for="tabs" class="sr-only">Select a tab</label>
      <!-- Use an "onChange" listener to redirect the user to the selected tab URL. -->
      <select id="tabs" name="tabs" class="block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md">
        <% for (const env of organization.environments) {%>
        <option data-action="#/product/<%=product.id%>/<%=env%>"<%= env == currentTab ? ' selected' : ''%>><%=env%></option>
        <%}%>
      </select>
    </div>
  <%
      function renderLink(env) {
          const packageCount = packageLists[env].length;

          if (currentTab == env) {
              return `
              <a href="#/product/${product.id}/${env}" class="border-indigo-500 text-indigo-600 whitespace-nowrap flex py-4 px-1 border-b-2 font-medium text-sm" aria-current="page">
                ${env}

                <span class="bg-indigo-100 text-indigo-600 hidden ml-3 py-0.5 px-2.5 rounded-full text-xs font-medium md:inline-block">${packageCount}</span>
              </a>
              `;
          } else {
              return `
              <a href="#/product/${product.id}/${env}" class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-200 whitespace-nowrap flex py-4 px-1 border-b-2 font-medium text-sm">
                  ${env}

                <span class="bg-gray-100 text-gray-900 hidden ml-3 py-0.5 px-2.5 rounded-full text-xs font-medium md:inline-block">${packageCount}</span>
              </a>`;
          }
      }
  %>
    <div class="hidden sm:block w-full">
      <div class="border-b border-gray-200 mx-6 w-full">
        <nav class="-mb-px w-full flex items-center justify-center space-x-8 " aria-label="Tabs">
          <% for (const env of organization.environments) {%>
              <%- renderLink(env) %>
          <%}%>
          <div class="flex-grow">&nbsp;</div>
          <div class="relative mr-6 my-2">
            <input type="search" data-searchtarget="#products tr" class="bg-purple-white shadow rounded border-0 p-3" placeholder="Filter">
            <div class="absolute top-1 right-3 mt-3 mr-4 text-purple-lighter">
                <svg version="1.1" class="h-4 text-dark" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
             viewBox="0 0 52.966 52.966" style="enable-background:new 0 0 52.966 52.966;" xml:space="preserve">
                    <path d="M51.704,51.273L36.845,35.82c3.79-3.801,6.138-9.041,6.138-14.82c0-11.58-9.42-21-21-21s-21,9.42-21,21s9.42,21,21,21
                      c5.083,0,9.748-1.817,13.384-4.832l14.895,15.491c0.196,0.205,0.458,0.307,0.721,0.307c0.25,0,0.499-0.093,0.693-0.279
                      C52.074,52.304,52.086,51.671,51.704,51.273z M21.983,40c-10.477,0-19-8.523-19-19s8.523-19,19-19s19,8.523,19,19
                      S32.459,40,21.983,40z"/>
                </svg>
            </div>
          </div>
  <% if (inDevelopmentEnv && !noVersions) { %>
          <div class="mt-4 sm:mt-0 sm:ml-16 sm:flex-none">
            <button type="button" data-action="toggleModal" data-target="#new-version" class="inline-flex items-center justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:w-auto">
              <!-- Heroicon name: solid/plus -->
              <svg class="-ml-1 mr-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
              </svg>
              New Version
            </button>
          </div>
  <% } %>
        </nav>
      </div>
    </div>
  </div>

  <% if (noVersions) { %>
  <div class="text-center">
    <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
      <path vector-effect="non-scaling-stroke" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z" />
    </svg>
    <h3 class="mt-2 text-sm font-medium text-gray-900">No versions</h3>
    <p class="mt-1 text-sm text-gray-500">Get started by creating your first product version.</p>
    <div class="mt-6">
      <button data-action="toggleModal" data-target="#new-version" type="button" class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
        <!-- Heroicon name: solid/plus -->
        <svg class="-ml-1 mr-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
          <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
        </svg>
        New Version
      </button>
    </div>
  </div>
  <% } else { %>
      <!-- This example requires Tailwind CSS v2.0+ -->
        <div class="max-w-7xl mx-auto py-1 px-4 sm:py-2 sm:px-6 lg:px-8 mt-8 flex flex-col">
          <div class="-my-2 -mx-4 overflow-x-auto sm:-mx-6 lg:-mx-8">
            <div class="inline-block min-w-full py-2 align-middle md:px-6 lg:px-8">

  <%
         for (const package of packageLists[currentTab]) {%>
<!-- This example requires Tailwind CSS v2.0+ -->
<div class="w-full overflow-hidden rounded-lg bg-gray-200 p-4 mb-6">
  <h2 class="whitespace-nowrap py-4 text-xl font-medium">Version effective <x-date><%=package.effectiveDate%></x-date></h2>
  <x-hbox>
    <div class="h-56 w-80 col-span-1 divide-y divide-gray-200 rounded-lg bg-white shadow">
          <h2 class="text-center text-2xl w-full p-2 font-medium bg-blue-100 text-blue-800"> development </h2>
      <x-vbox class="w-full p-2">
        <span class="whitespace-nowrap text-sm text-gray-500">Last updated <x-date data-datestyle="short"><%=package.versionInfo.saveTs%></x-date></span>

        <ul class="flex max-w-xs flex-wrap justify-between">
          <li class="w-36 mt-1"><x-button class="action w-24 text-xl" title="view"><x-svg src="svg/open.svg"></x-svg> view</x-button></li>
          <li class="w-36 mt-1"><x-button class="action w-24 text-xl" title="edit"><x-svg src="svg/edit.svg"></x-svg> edit</x-button></li>
          <li class="w-36 mt-1"><x-button class="action w-24 text-xl" title="test"><x-svg src="svg/test.svg"></x-svg> test</x-button></li>
          <li class="w-36 mt-1"><x-button class="action w-24 text-xl" title="deploy"><x-svg src="svg/deploy.svg"></x-svg> deploy</x-button></li>
          <li class="w-36 mt-1"><x-button class="action w-24 text-xl" title="clone"><x-svg src="svg/clone.svg"></x-svg> clone</x-button></li>
        </ul><%
            if (package.undefinedTerms.size > 0) { %>
        <span class="text-red-500"><%= package.undefinedTerms.size %> undefined term<%= package.undefinedTerms.size > 1 ? 's' : '' %></span>
<%          } %>
      </x-vbox>
    </div>

    <x-svg class="h-20 w-20" style="fill: #fff" src="svg/deploy.svg"></x-svg>
<%
  const inStaging = !!package.status.staging.versionId;
%>
    <div class="h-56 w-80 col-span-1 divide-y divide-gray-200 rounded-lg bg-white shadow<%= inStaging ? '' : ' inactive'%>">
          <h2 class="text-center text-2xl w-full p-2 font-medium bg-yellow-100 text-yellow-800"> staging </h2>
      <x-vbox class="w-full p-2"><%
        if (inStaging) {%>
        <span class="whitespace-nowrap text-sm text-gray-500">Last deployed <x-date data-datestyle="short"><%=package.status.staging.versionInfo.deployTs%></x-date></span>
        <ul class="flex max-w-xs flex-wrap justify-between">
          <li class="w-36 mt-1"><x-button class="action w-24 text-xl" title="view"><x-svg src="svg/open.svg"></x-svg> view</x-button></li>
          <li class="w-36 mt-1"><x-button class="action w-24 text-xl" title="test"><x-svg src="svg/test.svg"></x-svg> test</x-button></li>
          <li class="w-36 mt-1"><x-button class="action w-24 text-xl" title="deploy"><x-svg src="svg/deploy.svg"></x-svg> deploy</x-button></li>
          <li class="w-36 mt-1"><x-button class="action w-24 text-xl" title="clone"><x-svg src="svg/clone.svg"></x-svg> clone</x-button></li>
        </ul>
<%      } else {%>
        <p class="pt-16 text-center">no deployments</p>
<%      }%>
      </x-vbox>
    </div>

    <x-svg class="h-20 w-20" style="fill: #fff" src="svg/deploy.svg"></x-svg>

<%
  const inProduction = !!package.status.production.versionId;
%>
    <div class="h-56 w-80 col-span-1 divide-y divide-gray-200 rounded-lg bg-white shadow<%= inProduction ? '' : ' inactive'%>">
          <h2 class="text-center text-2xl w-full p-2 font-medium bg-green-100 text-green-800"> production </h2>
      <x-vbox class="w-full p-2"><%
        if (inProduction) {%>
        <span class="whitespace-nowrap text-sm text-gray-500">Last deployed <x-date data-datestyle="short"><%=package.status.staging.versionInfo.deployTs%></x-date></span>
        <ul class="flex max-w-xs flex-wrap justify-between">
          <li class="w-36 mt-1"><x-button class="action w-24 text-xl" title="view"><x-svg src="svg/open.svg"></x-svg> view</x-button></li>
          <li class="w-36 mt-1"><x-button class="action w-24 text-xl" title="test"><x-svg src="svg/test.svg"></x-svg> test</x-button></li>
          <li class="w-36 mt-1"><x-button class="action w-24 text-xl" title="clone"><x-svg src="svg/clone.svg"></x-svg> clone</x-button></li>
        </ul>
<%      } else {%>
        <p class="pt-16 text-center">no deployments</p>
<%      }%>
      </x-vbox>
    </div>
  </x-hbox>
</div>
 <%        } %>
              <div class="overflow-hidden shadow ring-1 ring-black ring-opacity-5 md:rounded-lg">
                <table class="min-w-full divide-y divide-gray-300">
                  <tbody class="divide-y divide-gray-200 bg-white">
  <%
         for (const package of packageLists[currentTab]) {%>
                      <tr><td colspan="*"><pre><%= JSON.stringify(package, null, 2) %></pre></td></tr>
                      <tr>
                        <td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 sm:pl-6">Effective <x-date><%=package.effectiveDate%></x-date></td>
                        <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">Last updated <x-date><%=package.versionInfo.saveTs%></x-date></td>
                        <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500"><%
            if (package.undefinedTerms.size > 0) { %><span class="text-red-500"><%= package.undefinedTerms.size %> undefined term<%= package.undefinedTerms.size > 1 ? 's' : '' %></span>
  <%        } %></td>
                        <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">&nbsp;</td>
                        <td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
                            <!-- This example requires Tailwind CSS v2.0+ -->
                            <button data-action="?mode=view#/package/<%=package.packageId%>" type="button" class="inline-flex items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">View</button>
  <%                          if (inDevelopmentEnv) { %>
                            <button data-action="?mode=edit#/package/<%=package.packageId%>" type="button" class="inline-flex items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">Edit</button>
                            <%                          } %>
                            <button data-action="?mode=test#/package/<%=package.packageId%>" type="button" class="inline-flex items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">Test</button>
  <%                          if (higherEnv) { %>
                            <button type="button" onclick="deployPackage('<%= package.packageId %>')" class="inline-flex items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">Deploy to <%=higherEnv%></button>
  <%                          } %>
                        </td>
                      </tr>
  <%   } %>
                  </tbody>
                </table>
              </div>
            </div>
          </div>
        </div>
  <% } %>

  <div data-action="hideModal" data-modalin="translate-x-0" data-modalout="translate-x-full" id="product-details" class="translate-x-full transform transition ease-in-out duration-300 fixed inset-0 overflow-hidden" aria-labelledby="slide-over-title" role="dialog" aria-modal="true">
    <div class="absolute inset-0 overflow-hidden">
      <!-- Background overlay, show/hide based on slide-over state. -->
      <div class="absolute inset-0" aria-hidden="true"></div>

      <div class="pointer-events-none fixed inset-y-0 right-0 flex max-w-full pl-10 sm:pl-16">
        <!--
          Slide-over panel, show/hide based on slide-over state.

          Entering: "transform transition ease-in-out duration-500 sm:duration-700"
            From: "translate-x-full"
            To: "translate-x-0"
          Leaving: "transform transition ease-in-out duration-500 sm:duration-700"
            From: "translate-x-0"
            To: "translate-x-full"
        -->
        <div data-action="" class="pointer-events-auto w-screen max-w-md">
          <form class="flex h-full flex-col divide-y divide-gray-200 bg-white shadow-xl" action="#/product/<%=product.id%>" method="POST">
            <input type="hidden" name="_csrf" value="<%= req.csrfToken() %>"/>
            <input type="hidden" name="serviceAction" value="updateProduct"/>
            <input type="hidden" name="productId" value="<%=product.id%>"/>
            <div class="h-0 flex-1 overflow-y-auto">
              <div class="bg-flatblue py-6 px-4 sm:px-6">
                <div class="flex items-center justify-between">
                  <h2 class="text-lg font-medium text-white" id="slide-over-title">Product Details</h2>
                  <div class="ml-3 flex h-7 items-center">
                    <button type="button" class="rounded-md bg-indigo-700 text-indigo-200 hover:text-white focus:outline-none focus:ring-2 focus:ring-white">
                      <span class="sr-only">Close panel</span>
                      <!-- Heroicon name: outline/x -->
                      <svg data-action="hideModal" class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                      </svg>
                    </button>
                  </div>
                </div>
                <div class="mt-1">
                  <p class="text-sm text-indigo-300">Update product details then click Save below.</p>
                </div>
              </div>
              <div class="flex flex-1 flex-col justify-between">
                <div class="divide-y divide-gray-200 px-4 sm:px-6">
                  <div class="space-y-6 pt-6 pb-5">
                    <div>
                      <label for="product-name" class="block text-sm font-medium text-gray-900">Product name</label>
                      <div class="mt-1">
                        <input type="text" name="productName" id="product-name" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm" value="<%= product.name %>" required autofocus>
                      </div>
                    </div>
                    <div>
                      <label for="description" class="block text-sm font-medium text-gray-900"> Description </label>
                      <div class="mt-1">
                        <textarea id="description" name="description" rows="4" class="block w-full rounded-md border border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"><%= product.description %></textarea>
                      </div>
                    </div>
                    <div>
                      <label for="states" class="block text-sm font-medium text-gray-900" inline-flex items-center> States <x-help></x-help>
                      </label>
                      <div class="mt-1">
                          <x-multicheck id="states"><%
                                  const ss = new Set(product.states);

                                  for (const state in product.organization.validStateCodes) {%>
                              <label <% if (ss.has(state)) {%>class="checked"<%}%> title="<%=product.organization.validStateCodes[state]%>"><input class="hidden" type="checkbox" name="states" value="<%=state%>" <% if (ss.has(state)) {%>checked<%}%>/><%=state%></label>
                          <%}%>
                          </x-multicheck>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="flex flex-shrink-0 justify-end px-4 py-4">
              <button data-action="hideModal" type="button" class="rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">Cancel</button>
              <button type="submit" class="ml-4 inline-flex justify-center rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">Save</button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>

  <!-- This example requires Tailwind CSS v2.0+ -->
  <div data-modalin="opacity-100 pointer-events-auto" data-modalout="opacity-0 pointer-events-none" id="new-version" class="opacity-0 pointer-events-none relative z-10 transition ease-in-out duration-100" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity"></div>

    <div data-action="hideModal" class="fixed z-10 inset-0 overflow-y-auto">
      <div class="flex items-end sm:items-center justify-center min-h-full p-4 text-center sm:p-0">
        <!--
          Modal panel, show/hide based on modal state.

          Entering: "ease-out duration-300"
            From: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
            To: "opacity-100 translate-y-0 sm:scale-100"
          Leaving: "ease-in duration-200"
            From: "opacity-100 translate-y-0 sm:scale-100"
            To: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
        -->
        <form data-action="" class="relative bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:max-w-lg sm:w-full sm:p-6"
              action="#/product/<%=product.id%>/<%=developmentEnv%>" method="POST">
              <input type="hidden" name="_csrf" value="<%= req.csrfToken() %>"/>
              <input type="hidden" name="serviceAction" value="createPackage"/>
              <input type="hidden" name="productId" value="<%=product.id%>"/>
          <div>
            <div class="mt-3 text-center sm:mt-5">
              <h3 class="text-lg leading-6 font-medium text-gray-900" id="modal-title">Create new product version</h3>
              <div class="mt-2">
                <p class="text-sm text-gray-500">Choose the effective date for the new version then click Create.</p>
              </div>
            </div>
          </div>
          <!--
            This example requires Tailwind CSS v2.0+

            This example requires some changes to your config:

            ```
            // tailwind.config.js
            module.exports = {
              // ...
              plugins: [
                // ...
                require('@tailwindcss/forms'),
              ],
            }
            ```
          -->
          <div>
            <label for="effectiveDate" class="block text-sm font-medium text-gray-700">Effective Date</label>
            <div class="mt-1 ml-6">
              <input type="date" name="effectiveDate" id="effectiveDate" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block sm:text-sm border-gray-300 rounded-md" required>
            </div>
          </div>
          <div class="mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense">
            <button type="submit" class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm">Create</button>
            <button data-action="hideModal" type="button" class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm">Cancel</button>
          </div>
        </form>
      </div>
    </div>
  </div>
</x-page>